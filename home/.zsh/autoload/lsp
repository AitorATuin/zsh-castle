# Aitor P. Iturri 
# List sbo packages

[ -n $SBOPKGS_DIR ] && SBOPKGS_DIR=/var/lib/sbopkg/SBo/14.1/ 

function get_sbo_pkgs() {
    awk '
        function set_formatter(var_name) {
            return "%"G[var_name]"s"
        }
        function set_global_len(var_name, v)
        {
            n = length(v)
            if (n > G[var_name])
                G[var_name] = n
        }

        function new_package(name, version, section, description)
        {
            SBO[name,"name"]        = name
            SBO[name,"version"]     = version
            SBO[name,"section"]     = section
            SBO[name,"description"] = description
            PKGS[name]              = 1
        }

        BEGIN {
            G["name_len"]    = 0
            G["section_len"] = 0
            G["version_len"] = 0
        }

        {
            if ($1 ~ /SLACKBUILD/) {
                if ($2 ~ /NAME:/)
                    name = $3
                else if ($2 ~ /LOCATION:/) {
                    split($3, location, "/")
                    section = location[2]
                }
                else if ($2 ~ /VERSION:/)
                    version = $3
                else if ($2 ~ /SHORT/) {
                    description = ""
                    for (i=5;i<=NF;i++) {
                        description = description " " $i
                    }
                }
            } else if ($1 ~ //)
                new_package(name, version, section, description)
        }

        END {
            for (pkg in PKGS) {
                printf "%s | %-s %s\n", "\033[0;37m" SBO[pkg,"section"] "\033[1;0m", \
                                          "\033[1;33m" SBO[pkg,"name"] " - \033[1;34m" SBO[pkg,"version"], \
                                          "\033[0;36m" SBO[pkg,"description"]
            }
        }' ${SBOPKGS_DIR}/SLACKBUILDS.TXT | sort
} 

out=$(get_sbo_pkgs | fzf --ansi --exit-0 --prompt="Slackbuild> " \
    --expect=alt-c,alt-i,alt-u --multi)
key=$(head -1 <<< "$out")
for f in $(tail -n+2 <<< "$out" | awk '{print($3)}'); do
    echo $f
done
